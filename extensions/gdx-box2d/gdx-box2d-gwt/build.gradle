plugins {
    id 'org.jetbrains.kotlin.jvm'
}
dependencies {
    api libraries.gwt
    compileOnly libraries.compileOnly.gwt
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

configurations.all {
    // gwt-dev pulls in apache-jsp (Tomcat), but we don't need it and it messes with gretty
    exclude group: 'org.eclipse.jetty', module: 'apache-jsp'
}

sourceSets.main.java.exclude "**/System.java"

eclipse {
    classpath {
        containers += [
                'com.google.gwt.eclipse.core.GWT_CONTAINER',
                'com.gwtplugins.gwt.eclipse.core.GWT_CONTAINER'
        ]

        file {
            withXml {
                def node = it.asNode()

                // Collect nodes to modify
                def nodesToModify = []
                node.children().each { c ->
                    if (c.attribute('path').equals('src')) {
                        nodesToModify << c
                    }
                }

                // Modify the collected nodes
                nodesToModify.each { c ->
                    def newAttrs = c.attributes().collectEntries { [(it.key): it.value] }
                    newAttrs.put('excluding', 'com/badlogic/gdx/physics/box2d/gwt/emu/')

                    def newNode = new Node(c.parent(), c.name(), newAttrs)
                    c.children().each { child ->
                        newNode.append(child)
                    }
                    c.replaceNode(newNode)
                }

                // Add second classpath entry for emu folder if not exists
                def emuNodes = node.children().findAll { it.name() == 'classpathentry' && it.'@path'.equals('src/com/badlogic/gdx/physics/box2d/gwt/emu/') }
                if (emuNodes.size() == 0) {
                    node.appendNode('classpathentry', [
                            kind     : 'src',
                            path     : 'src/com/badlogic/gdx/physics/box2d/gwt/emu/',
                            excluding: 'java/lang/System.java'
                    ])
                }
            }
        }
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}