sourceSets.main.java {
    srcDirs = [
            "jni/swig-src/collision",
            "jni/swig-src/dynamics",
            "jni/swig-src/extras",
            "jni/swig-src/linearmath",
            "jni/swig-src/softbody",
            "jni/swig-src/inversedynamics",
            "src"
    ]
    exclude "classes.i"
    exclude "*.cpp"
    exclude "*.h"
}

dependencies {
    api project(":gdx")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

apply plugin: "com.badlogicgames.gdx.gdx-jnigen"
apply plugin: 'kotlin'
jnigen {
    sharedLibName = "gdx-bullet"
    nativeCodeGenerator {
        sourceDir = "src"
    }
    all {
        headerDirs = [
                "src/bullet/",
                "src/custom/",
                "src/extras/Serialize/",
                "src/extras/"
        ]
        cExcludes = [
                "src/bullet/BulletMultiThreaded/GpuSoftBodySolvers/**"
        ]
        cppExcludes = [
                "src/bullet/BulletMultiThreaded/GpuSoftBodySolvers/**"
        ]

        // SWIG doesn't emit strict aliasing compliant code
        cppFlags += " -fno-strict-aliasing";
        // SWIG directors aren't clearly documented to require RTTI, but SWIG
        // normally generates a small number of dynamic_casts for director code.
        // gdx-bullet's swig build.xml replaces these with static C casts so we
        // can compile without RTTI and save some disk space. It seems to work
        // with these static casts.
        cppFlags += " -fno-rtti";
        // Disable profiling (it's on by default). If you change this, you
        // must regenerate the SWIG wrappers with the changed value.
        cppFlags += " -DBT_NO_PROFILE";
        //Bullet 2 compatibility with inverse dynamics
        cppFlags += " -DBT_USE_INVERSE_DYNAMICS_WITH_BULLET2";
    }
    add(Windows, x32)
    add(Windows, x64)
    add(Linux, x64)
    add(Linux, x32, ARM)
    add(Linux, x64, ARM)
    add(Linux, x64, RISCV)
    add(MacOsX, x64)
    add(MacOsX, x64, ARM)
    add(Android) {
        cppFlags += " -fexceptions"
        androidApplicationMk += "APP_STL := c++_static";
    }
    add(IOS) {
        cppFlags += " -stdlib=libc++";
    }

    robovm {
        forceLinkClasses "com.badlogic.gdx.physics.bullet.collision.CollisionJNI", "com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI",
                "com.badlogic.gdx.physics.bullet.extras.ExtrasJNI", "com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI",
                "com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI", "com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback",
                "com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback", "com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback",
                "com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback", "com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback",
                "com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback", "com.badlogic.gdx.physics.bullet.collision.btOverlapCallback",
                "com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback", "com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback",
                "com.badlogic.gdx.physics.bullet.collision.btTriangleCallback", "com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback",
                "com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback", "com.badlogic.gdx.physics.bullet.collision.ContactCache",
                "com.badlogic.gdx.physics.bullet.collision.ContactListener", "com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher",
                "com.badlogic.gdx.physics.bullet.collision.LocalRayResult", "com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo",
                "com.badlogic.gdx.physics.bullet.collision.RayResultCallback", "com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback",
                "com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback", "com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback",
                "com.badlogic.gdx.physics.bullet.collision.LocalConvexResult", "com.badlogic.gdx.physics.bullet.collision.ContactResultCallback",
                "com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback", "com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter",
                "com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw", "com.badlogic.gdx.physics.bullet.linearmath.btMotionState",
                "com.badlogic.gdx.physics.bullet.DebugDrawer"
    }
}
buildscript {
    ext.kotlin_version = '2.0.21'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
