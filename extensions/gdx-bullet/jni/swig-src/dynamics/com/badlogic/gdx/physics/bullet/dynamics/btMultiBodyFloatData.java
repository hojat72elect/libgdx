/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet.dynamics;

import com.badlogic.gdx.physics.bullet.BulletBase;
import com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData;
import com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData;
import com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData;

public class btMultiBodyFloatData extends BulletBase {
    private long swigCPtr;

    protected btMultiBodyFloatData(final String className, long cPtr, boolean cMemoryOwn) {
        super(className, cPtr, cMemoryOwn);
        swigCPtr = cPtr;
    }

    /**
     * Construct a new btMultiBodyFloatData, normally you should not need this constructor it's intended for low-level usage.
     */
    public btMultiBodyFloatData(long cPtr, boolean cMemoryOwn) {
        this("btMultiBodyFloatData", cPtr, cMemoryOwn);
        construct();
    }

    public btMultiBodyFloatData() {
        this(DynamicsJNI.new_btMultiBodyFloatData(), true);
    }

    public static long getCPtr(btMultiBodyFloatData obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    @Override
    protected void reset(long cPtr, boolean cMemoryOwn) {
        if (!destroyed) destroy();
        super.reset(swigCPtr = cPtr, cMemoryOwn);
    }

    @Override
    protected void finalize() throws Throwable {
        if (!destroyed) destroy();
        super.finalize();
    }

    @Override
    protected synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                DynamicsJNI.delete_btMultiBodyFloatData(swigCPtr);
            }
            swigCPtr = 0;
        }
        super.delete();
    }

    public String getBaseName() {
        return DynamicsJNI.btMultiBodyFloatData_baseName_get(swigCPtr, this);
    }

    public void setBaseName(String value) {
        DynamicsJNI.btMultiBodyFloatData_baseName_set(swigCPtr, this, value);
    }

    public btMultiBodyLinkFloatData getLinks() {
        long cPtr = DynamicsJNI.btMultiBodyFloatData_links_get(swigCPtr, this);
        return (cPtr == 0) ? null : new btMultiBodyLinkFloatData(cPtr, false);
    }

    public void setLinks(btMultiBodyLinkFloatData value) {
        DynamicsJNI.btMultiBodyFloatData_links_set(swigCPtr, this, btMultiBodyLinkFloatData.getCPtr(value), value);
    }

    public btCollisionObjectFloatData getBaseCollider() {
        long cPtr = DynamicsJNI.btMultiBodyFloatData_baseCollider_get(swigCPtr, this);
        return (cPtr == 0) ? null : new btCollisionObjectFloatData(cPtr, false);
    }

    public void setBaseCollider(btCollisionObjectFloatData value) {
        DynamicsJNI.btMultiBodyFloatData_baseCollider_set(swigCPtr, this, btCollisionObjectFloatData.getCPtr(value), value);
    }

    public btTransformFloatData getBaseWorldTransform() {
        long cPtr = DynamicsJNI.btMultiBodyFloatData_baseWorldTransform_get(swigCPtr, this);
        return (cPtr == 0) ? null : new btTransformFloatData(cPtr, false);
    }

    public void setBaseWorldTransform(btTransformFloatData value) {
        DynamicsJNI.btMultiBodyFloatData_baseWorldTransform_set(swigCPtr, this, btTransformFloatData.getCPtr(value), value);
    }

    public btVector3FloatData getBaseInertia() {
        long cPtr = DynamicsJNI.btMultiBodyFloatData_baseInertia_get(swigCPtr, this);
        return (cPtr == 0) ? null : new btVector3FloatData(cPtr, false);
    }

    public void setBaseInertia(btVector3FloatData value) {
        DynamicsJNI.btMultiBodyFloatData_baseInertia_set(swigCPtr, this, btVector3FloatData.getCPtr(value), value);
    }

    public float getBaseMass() {
        return DynamicsJNI.btMultiBodyFloatData_baseMass_get(swigCPtr, this);
    }

    public void setBaseMass(float value) {
        DynamicsJNI.btMultiBodyFloatData_baseMass_set(swigCPtr, this, value);
    }

    public int getNumLinks() {
        return DynamicsJNI.btMultiBodyFloatData_numLinks_get(swigCPtr, this);
    }

    public void setNumLinks(int value) {
        DynamicsJNI.btMultiBodyFloatData_numLinks_set(swigCPtr, this, value);
    }

}
